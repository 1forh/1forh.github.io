{"05-02-2017-creating-a-blog-with-angularjs-and-markdown":{"title":"Creating a Blog with AngularJS and Markdown","excerpt":"I use Angular a lot at my day job so to become more familiar with it, I wanted to create my portfolio using Angular. I also wanted to be able to write my posts in markdown.","tags":["JavaScript","AngularJS","Gulp","Markdown"],"body":"<h2 id=\"the-problem\">The Problem</h2>\n<p>I use  <a href=\"https://angularjs.org/\">Angular</a> a lot at my day job so to become more familiar with it, I wanted to create my portfolio using Angular. I also wanted to be able to write my posts in markdown.</p>\n<p>How do I get Angular to read my posts in markdown?</p>\n<h2 id=\"the-solution\">The Solution</h2>\n<p>Let&#39;s use a Gulp task to convert our markdown to JSON. Angular can read JSON very easily.</p>\n<h3 id=\"setting-up-our-application\">Setting up our application</h3>\n<p>I want to be able to easily refactor this application to <a href=\"https://angular.io/\">Angular 2</a> when we update our stack at work. I can setup my application using a &quot;Component Architecture&quot; so that it is relativey similar to how an Angular 2 application is setup. I will also heavily utilize Angular&#39;s <a href=\"https://docs.angularjs.org/guide/component\">component</a> directive for the same reason.</p>\n<h3 id=\"the-gulp-task\">The Gulp Task</h3>\n<p>I will use the <a href=\"https://github.com/sparkartgroup/gulp-markdown-to-json\">gulp-markdown-to-json</a> plugin to convert my markdown to JSON. </p>\n<pre><code class=\"lang-javascript\">import gulp from &#39;gulp&#39;;\nimport gutil from &#39;gulp-util&#39;;\nimport plumber from &#39;gulp-plumber&#39;;\nimport markdownToJson from &#39;gulp-markdown-to-json&#39;;\n\ngulp.task(&#39;posts&#39;, () =&gt; {\n    return gulp.src(&#39;./src/posts/**/*.md&#39;)\n        .pipe(plumber())\n        .pipe(gutil.buffer())\n        .pipe(markdownToJson(marked, &#39;posts.json&#39;))\n        .pipe(gulp.dest(&#39;./dist/data&#39;));\n});\n</code></pre>\n<p>This Gulp task takes in all of my blog posts, written in markdown, and outputs the data to one JSON file: <code>posts.json</code>.</p>\n<p>Then I can get the data from <code>posts.json</code> using an Angular service.</p>\n<h3 id=\"an-example-post\">An example post</h3>\n<p>The Gulp task will take the Front Matter block and output the data, along with the compiled markup of your post, as JSON. I can put any type of data I want here and the Gulp task will convert it to JSON. This will allow me to manipulate the data and use it in my Angular components.</p>\n<pre><code class=\"lang-markdown\">---\ntitle: Example Post\nexcerpt: Using Angularjs to create a blog/portfolio lorem...\ntags:\n - Tag 1\n - Tag 2\n\n---\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsam in repellat suscipit maiores possimus aliquam hic distinctio, quas commodi, eaque tempora iusto ratione, nostrum adipisci quidem quasi! Numquam tempore, itaque.\n</code></pre>\n<h3 id=\"the-application-structure\">The application structure</h3>\n<pre><code>src/\n    app/\n        components/\n            zm-blog/\n        app.routes.js\n        app.module.js\n    posts/\n        05-02-2017-test-post.md\n</code></pre><h3 id=\"the-blog-component\">The Blog component</h3>\n<pre><code class=\"lang-javascript\">const zmBlog = {\n    templateUrl: &#39;./zm-blog.html&#39;,\n    controller: &#39;ZMBlogController&#39;\n};\n\nangular\n    .module(&#39;app.components&#39;)\n    .component(&#39;zmBlog&#39;, zmBlog);\n</code></pre>\n<h2 id=\"hosting-on-github-pages\">Hosting on GitHub Pages</h2>\n<p>TBD</p>\n<h2 id=\"setting-up-continuous-integration\">Setting up continuous integration</h2>\n<p>TBD</p>\n","updatedAt":"2017-02-06T02:49:48.000Z"}}